{
  "name": "turbo-ai-rules",
  "displayName": "Turbo AI Rules",
  "description": "%description%",
  "version": "2.0.0",
  "publisher": "ygqygq2",
  "icon": "resources/images/logo.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/ygqygq2/turbo-ai-rules.git"
  },
  "engines": {
    "vscode": "^1.105.0"
  },
  "categories": [
    "Other",
    "Programming Languages",
    "Snippets"
  ],
  "keywords": [
    "ai",
    "rules",
    "cursor",
    "copilot",
    "continue",
    "coding-standards"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension/extension.js",
  "l10n": "./l10n",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "turbo-ai-rules",
          "title": "Turbo AI Rules",
          "icon": "resources/images/logo-icon.svg",
          "order": 1000
        }
      ]
    },
    "commands": [
      {
        "command": "turbo-ai-rules.addSource",
        "title": "%turboAiRules.addSource.title%",
        "category": "Turbo AI Rules",
        "icon": "$(add)"
      },
      {
        "command": "turbo-ai-rules.removeSource",
        "title": "%turboAiRules.removeSource.title%",
        "category": "Turbo AI Rules",
        "icon": "$(trash)"
      },
      {
        "command": "turbo-ai-rules.syncRules",
        "title": "%turboAiRules.syncRules.title%",
        "category": "Turbo AI Rules",
        "icon": "$(sync)"
      },
      {
        "command": "turbo-ai-rules.searchRules",
        "title": "%turboAiRules.searchRules.title%",
        "category": "Turbo AI Rules",
        "icon": "$(search)"
      },
      {
        "command": "turbo-ai-rules.generateConfigs",
        "title": "%turboAiRules.generateConfigs.title%",
        "category": "Turbo AI Rules",
        "icon": "$(file-code)"
      },
      {
        "command": "turbo-ai-rules.manageSource",
        "title": "%turboAiRules.manageSource.title%",
        "category": "Turbo AI Rules",
        "icon": "$(settings-gear)"
      },
      {
        "command": "turbo-ai-rules.refresh",
        "title": "%turboAiRules.refresh.title%",
        "category": "Turbo AI Rules",
        "icon": "$(refresh)"
      },
      {
        "command": "turbo-ai-rules.editSource",
        "title": "Edit Source",
        "category": "Turbo AI Rules",
        "icon": "$(edit)"
      },
      {
        "command": "turbo-ai-rules.testConnection",
        "title": "Test Connection",
        "category": "Turbo AI Rules",
        "icon": "$(plug)"
      },
      {
        "command": "turbo-ai-rules.toggleSource",
        "title": "Toggle Enable/Disable",
        "category": "Turbo AI Rules",
        "icon": "$(circle-slash)"
      },
      {
        "command": "turbo-ai-rules.copyRuleContent",
        "title": "Copy Rule Content",
        "category": "Turbo AI Rules",
        "icon": "$(copy)"
      },
      {
        "command": "turbo-ai-rules.exportRule",
        "title": "Export Rule",
        "category": "Turbo AI Rules",
        "icon": "$(export)"
      },
      {
        "command": "turbo-ai-rules.ignoreRule",
        "title": "Ignore Rule",
        "category": "Turbo AI Rules",
        "icon": "$(eye-closed)"
      },
      {
        "command": "turbo-ai-rules.showWelcome",
        "title": "Show Welcome",
        "category": "Turbo AI Rules",
        "icon": "$(home)"
      },
      {
        "command": "turbo-ai-rules.showStatistics",
        "title": "Show Statistics",
        "category": "Turbo AI Rules",
        "icon": "$(graph)"
      },
      {
        "command": "turbo-ai-rules.advancedSearch",
        "title": "Advanced Rule Search",
        "category": "Turbo AI Rules",
        "icon": "$(search)"
      }
    ],
    "views": {
      "turbo-ai-rules": [
        {
          "id": "turboAiRulesExplorer",
          "name": "Rules Explorer",
          "contextualTitle": "Turbo AI Rules"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "turboAiRulesExplorer",
        "contents": "No rule sources configured.\n[Add Source](command:turbo-ai-rules.addSource)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "turbo-ai-rules.showWelcome",
          "when": "view == turboAiRulesExplorer",
          "group": "navigation@0"
        },
        {
          "command": "turbo-ai-rules.addSource",
          "when": "view == turboAiRulesExplorer",
          "group": "navigation@1"
        },
        {
          "command": "turbo-ai-rules.syncRules",
          "when": "view == turboAiRulesExplorer",
          "group": "navigation@2"
        },
        {
          "command": "turbo-ai-rules.refresh",
          "when": "view == turboAiRulesExplorer",
          "group": "navigation@3"
        },
        {
          "command": "turbo-ai-rules.showStatistics",
          "when": "view == turboAiRulesExplorer",
          "group": "navigation@4"
        },
        {
          "command": "turbo-ai-rules.advancedSearch",
          "when": "view == turboAiRulesExplorer",
          "group": "navigation@5"
        }
      ],
      "view/item/context": [
        {
          "command": "turbo-ai-rules.syncRules",
          "when": "view == turboAiRulesExplorer && viewItem == source",
          "group": "inline@1"
        },
        {
          "command": "turbo-ai-rules.removeSource",
          "when": "view == turboAiRulesExplorer && viewItem == source",
          "group": "inline@2"
        },
        {
          "command": "turbo-ai-rules.editSource",
          "when": "view == turboAiRulesExplorer && viewItem == source",
          "group": "1_actions@1"
        },
        {
          "command": "turbo-ai-rules.testConnection",
          "when": "view == turboAiRulesExplorer && viewItem == source",
          "group": "1_actions@2"
        },
        {
          "command": "turbo-ai-rules.toggleSource",
          "when": "view == turboAiRulesExplorer && viewItem == source",
          "group": "1_actions@3"
        },
        {
          "command": "turbo-ai-rules.copyRuleContent",
          "when": "view == turboAiRulesExplorer && viewItem == rule",
          "group": "1_actions@1"
        },
        {
          "command": "turbo-ai-rules.exportRule",
          "when": "view == turboAiRulesExplorer && viewItem == rule",
          "group": "1_actions@2"
        },
        {
          "command": "turbo-ai-rules.ignoreRule",
          "when": "view == turboAiRulesExplorer && viewItem == rule",
          "group": "2_manage@1"
        }
      ]
    },
    "configuration": {
      "title": "%configuration.title%",
      "properties": {
        "turbo-ai-rules.storage.useLocalConfig": {
          "type": "boolean",
          "default": false,
          "description": "%turboAiRules.storage.useLocalConfig.description%"
        },
        "turbo-ai-rules.storage.useGlobalCache": {
          "type": "boolean",
          "default": true,
          "description": "%turboAiRules.storage.useGlobalCache.description%"
        },
        "turbo-ai-rules.storage.projectLocalDir": {
          "type": "string",
          "default": ".ai-rules",
          "description": "%turboAiRules.storage.projectLocalDir.description%"
        },
        "turbo-ai-rules.storage.autoGitignore": {
          "type": "boolean",
          "default": true,
          "description": "%turboAiRules.storage.autoGitignore.description%"
        },
        "turbo-ai-rules.protectUserRules": {
          "type": "boolean",
          "default": false,
          "description": "%turboAiRules.protectUserRules.description%"
        },
        "turbo-ai-rules.userPrefixRange": {
          "type": "object",
          "default": {
            "min": 800,
            "max": 999
          },
          "properties": {
            "min": {
              "type": "number",
              "minimum": 0,
              "maximum": 999,
              "description": "%turboAiRules.userPrefixRange.min.description%"
            },
            "max": {
              "type": "number",
              "minimum": 0,
              "maximum": 999,
              "description": "%turboAiRules.userPrefixRange.max.description%"
            }
          },
          "description": "%turboAiRules.userPrefixRange.description%"
        },
        "turbo-ai-rules.blockMarkers": {
          "type": "object",
          "default": {
            "begin": "<!-- TURBO-AI-RULES:BEGIN -->",
            "end": "<!-- TURBO-AI-RULES:END -->"
          },
          "properties": {
            "begin": {
              "type": "string",
              "description": "%turboAiRules.blockMarkers.begin.description%"
            },
            "end": {
              "type": "string",
              "description": "%turboAiRules.blockMarkers.end.description%"
            }
          },
          "description": "%turboAiRules.blockMarkers.description%"
        },
        "turbo-ai-rules.parser.strictMode": {
          "type": "boolean",
          "default": false,
          "description": "%turboAiRules.parser.strictMode.description%"
        },
        "turbo-ai-rules.parser.requireFrontmatter": {
          "type": "boolean",
          "default": false,
          "description": "%turboAiRules.parser.requireFrontmatter.description%"
        },
        "turbo-ai-rules.adapters.cursor.enabled": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "%turboAiRules.adapters.cursor.enabled.description%"
        },
        "turbo-ai-rules.adapters.cursor.autoUpdate": {
          "type": "boolean",
          "default": false,
          "description": "%turboAiRules.adapters.cursor.autoUpdate.description%"
        },
        "turbo-ai-rules.adapters.copilot.enabled": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "%turboAiRules.adapters.copilot.enabled.description%"
        },
        "turbo-ai-rules.adapters.copilot.autoUpdate": {
          "type": "boolean",
          "default": false,
          "description": "%turboAiRules.adapters.copilot.autoUpdate.description%"
        },
        "turbo-ai-rules.adapters.continue.enabled": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "%turboAiRules.adapters.continue.enabled.description%"
        },
        "turbo-ai-rules.adapters.continue.autoUpdate": {
          "type": "boolean",
          "default": true,
          "description": "%turboAiRules.adapters.continue.autoUpdate.description%"
        },
        "turbo-ai-rules.adapters.custom": {
          "type": "array",
          "default": [],
          "items": {
            "type": "object",
            "required": [
              "id",
              "name",
              "outputPath",
              "outputType"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[a-z0-9-]+$",
                "description": "%turboAiRules.adapters.custom.items.properties.id.description%"
              },
              "name": {
                "type": "string",
                "description": "%turboAiRules.adapters.custom.items.properties.name.description%"
              },
              "enabled": {
                "type": "boolean",
                "default": true,
                "description": "%turboAiRules.adapters.custom.items.properties.enabled.description%"
              },
              "autoUpdate": {
                "type": "boolean",
                "default": true,
                "description": "%turboAiRules.adapters.custom.items.properties.autoUpdate.description%"
              },
              "outputPath": {
                "type": "string",
                "description": "%turboAiRules.adapters.custom.items.properties.outputPath.description%"
              },
              "outputType": {
                "type": "string",
                "enum": [
                  "file",
                  "directory"
                ],
                "description": "%turboAiRules.adapters.custom.items.properties.outputType.description%"
              },
              "fileExtensions": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^\\.[a-z0-9]+$"
                },
                "description": "%turboAiRules.adapters.custom.items.properties.fileExtensions.description%"
              },
              "organizeBySource": {
                "type": "boolean",
                "default": true,
                "description": "%turboAiRules.adapters.custom.items.properties.organizeBySource.description%"
              },
              "generateIndex": {
                "type": "boolean",
                "default": true,
                "description": "%turboAiRules.adapters.custom.items.properties.generateIndex.description%"
              },
              "indexFileName": {
                "type": "string",
                "default": "index.md",
                "description": "%turboAiRules.adapters.custom.items.properties.indexFileName.description%"
              }
            }
          },
          "description": "%turboAiRules.adapters.custom.description%"
        },
        "turbo-ai-rules.sync.auto": {
          "type": "boolean",
          "default": true,
          "description": "%turboAiRules.sync.auto.description%"
        },
        "turbo-ai-rules.sync.interval": {
          "type": "number",
          "default": 60,
          "minimum": 5,
          "description": "%turboAiRules.sync.interval.description%"
        },
        "turbo-ai-rules.sync.onStartup": {
          "type": "boolean",
          "default": true,
          "description": "%turboAiRules.sync.onStartup.description%"
        },
        "turbo-ai-rules.sync.conflictStrategy": {
          "type": "string",
          "default": "priority",
          "enum": [
            "priority",
            "merge",
            "skip-duplicates"
          ],
          "enumDescriptions": [
            "%turboAiRules.sync.conflictStrategy.priority%",
            "%turboAiRules.sync.conflictStrategy.merge%",
            "%turboAiRules.sync.conflictStrategy.skip-duplicates%"
          ],
          "description": "%turboAiRules.sync.conflictStrategy.description%"
        }
      }
    },
    "keybindings": [
      {
        "command": "turbo-ai-rules.syncRules",
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r",
        "when": "!terminalFocus"
      },
      {
        "command": "turbo-ai-rules.addSource",
        "key": "ctrl+shift+a",
        "mac": "cmd+shift+a",
        "when": "view == turboAiRulesExplorer"
      },
      {
        "command": "turbo-ai-rules.searchRules",
        "key": "ctrl+shift+f",
        "mac": "cmd+shift+f",
        "when": "view == turboAiRulesExplorer"
      },
      {
        "command": "turbo-ai-rules.generateConfigs",
        "key": "ctrl+shift+g",
        "mac": "cmd+shift+g",
        "when": "!terminalFocus"
      },
      {
        "command": "turbo-ai-rules.showMenu",
        "key": "ctrl+shift+m",
        "mac": "cmd+shift+m",
        "when": "!terminalFocus"
      },
      {
        "command": "turbo-ai-rules.showStatistics",
        "key": "ctrl+shift+s",
        "mac": "cmd+shift+s",
        "when": "view == turboAiRulesExplorer"
      },
      {
        "command": "turbo-ai-rules.advancedSearch",
        "key": "ctrl+shift+alt+f",
        "mac": "cmd+shift+alt+f",
        "when": "view == turboAiRulesExplorer"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run build:webview && rm -rf out/extension && npm run esbuild-base -- --minify",
    "build:webview": "vite build --mode webview",
    "watch:webview": "vite build --mode webview --watch",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run build:webview && npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run build:webview && npm run esbuild-base -- --sourcemap --watch",
    "watch": "npm run esbuild-watch",
    "dev": "concurrently \"npm run watch:webview\" \"npm run esbuild-watch\"",
    "pretest": "npm run lint",
    "compile": "npm run build:webview && npm run esbuild-base -- --sourcemap",
    "package": "vsce package --no-dependencies",
    "publish": "vsce publish --no-dependencies",
    "clean": "rimraf out/",
    "test-compile": "npm run clean && tsc -p ./ && npm run compile",
    "test": "npm run test-compile && vscode-test",
    "test-grep": "vscode-test -f",
    "test:suite:mocha": "npm run test-compile && node out/test/runTests.js",
    "test:suite": "node out/test/runTests.js",
    "test:unit": "vitest unit --watch=false",
    "test:coverage": "vitest run --coverage",
    "lint": "eslint src",
    "lint-fix": "eslint --fix src",
    "prepush": "pnpm run lint",
    "postinstall": "simple-git-hooks",
    "preinstall": "npx only-allow pnpm"
  },
  "devDependencies": {
    "@eslint/js": "^9.38.0",
    "@types/fs-extra": "^11.0.4",
    "@types/lodash": "^4.17.20",
    "@types/lodash-es": "^4.17.12",
    "@types/mocha": "^10.0.10",
    "@types/module-alias": "^2.0.4",
    "@types/node": "~24.9.1",
    "@types/react": "^19.2.2",
    "@types/react-dom": "^19.2.2",
    "@types/tmp": "^0.2.6",
    "@types/vscode": "^1.105.0",
    "@vitejs/plugin-react": "^5.1.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vscode/l10n": "^0.0.18",
    "@vscode/l10n-dev": "^0.0.35",
    "@vscode/test-cli": "^0.0.12",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.11",
    "eslint": "^9.38.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "fs-extra": "^11.3.2",
    "glob": "^11.0.3",
    "jest-mock-vscode": "^4.7.0",
    "lint-staged": "^16.2.5",
    "mocha": "^11.7.4",
    "react": "^19.2.0",
    "react-dom": "^19.2.0",
    "rimraf": "^6.0.1",
    "simple-git-hooks": "^2.13.1",
    "tmp": "^0.2.5",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.9.3",
    "typescript-eslint": "^8.46.2",
    "vite": "^7.1.11",
    "vitest": "^3.2.4"
  },
  "dependencies": {
    "@ygqygq2/vscode-log": "^0.0.3",
    "gray-matter": "^4.0.3",
    "simple-git": "^3.28.0"
  }
}
